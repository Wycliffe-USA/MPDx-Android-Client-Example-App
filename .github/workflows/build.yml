name: Build App

on:
  push:
    branches: [test, prod, feature/* ]
  pull_request:
    branches: [test, prod, feature/* ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version-file: ".java-version"
      - name: Build App
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bundle --scan

  checkstyle:
    name: Checkstyle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version-file: ".java-version"
      - name: Run checkstyle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: checkstyle --scan
      - name: Archive checkstyle results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle-results
          path: "**/build/reports/checkstyle/"

  ktlint:
    name: ktlint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version-file: ".java-version"
      - name: Run ktlint
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlintCheck --scan
      - name: Archive ktlint results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ktlint-results
          path: "**/build/reports/ktlint/"

  lint:
    name: Lint Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version-file: ".java-version"
      - name: Run Lint Checks
        uses: gradle/gradle-build-action@v2
        with:
          arguments: lint --scan
      - name: Archive lint results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lint-results
          path: "**/build/reports/lint-results*.*"

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version-file: ".java-version"
      - name: Run Unit Tests
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          arguments: test   --max-workers 1 --scan
      #      - name: Codecov
      #        uses: codecov/codecov-action@v3
      #        with:
      #          token: ${{ secrets.CODECOV_TOKEN }}
      #          fail_ci_if_error: true
      #          verbose: true
      - name: Archive Unit Test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results
          path: "**/build/reports/tests/"

  test_build:
    name: Deploy QA Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/test'
    needs: [ build, checkstyle, ktlint, lint, tests ]
    env:
      ORG_GRADLE_PROJECT_firebaseAppDistributionKeystoreStorePassword: ${{ secrets.BETA_KEYSTORE_PASSWORD }}
      ORG_GRADLE_PROJECT_firebaseAppDistributionKeystoreKeyPassword: ${{ secrets.BETA_KEYSTORE_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version-file: ".java-version"
      - name: Build App
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean :app:packageQaUniversalApk -PfirebaseAppDistributionBuild --continue --stacktrace
      - name: Import Firebase API Key
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        run: echo $FIREBASE_API_KEY > firebase/firebase_api_key.json
      - name: Upload Build to Firebase
        uses: gradle/gradle-build-action@v2
        with:
          arguments: appDistributionUploadQa -PfirebaseAppDistributionBuild

  beta_build:
    name: Deploy Beta Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/prod'
    needs: [ build, checkstyle, ktlint, lint, tests ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version-file: ".java-version"
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Import GooglePlayAPI.json
        env:
          GOOGLE_PLAY_API_KEY: ${{ secrets.GOOGLE_PLAY_API_KEY }}
        run: echo $GOOGLE_PLAY_API_KEY > ./fastlane/GooglePlayAPI.json
      - name: Fastlane Beta
        env:
          GOOGLE_PLAY_UPLOAD_KEY_PASSWORD: ${{ secrets.GOOGLE_PLAY_UPLOAD_KEY_PASSWORD }}
        run: fastlane android beta
